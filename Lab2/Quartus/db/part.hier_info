|part
A[0] => part:iPart_a.A[0]
A[0] => part:iPart_b.A[0]
A[0] => part:iPart_c.A[0]
A[0] => part:iPart_d.A[0]
A[1] => part:iPart_a.A[1]
A[1] => part:iPart_b.A[1]
A[1] => part:iPart_c.A[1]
A[1] => part:iPart_d.A[1]
A[2] => part:iPart_a.A[2]
A[2] => part:iPart_b.A[2]
A[2] => part:iPart_c.A[2]
A[2] => part:iPart_d.A[2]
A[3] => part:iPart_a.A[3]
A[3] => part:iPart_b.A[3]
A[3] => part:iPart_c.A[3]
A[3] => part:iPart_d.A[3]
A[4] => part:iPart_a.A[4]
A[4] => part:iPart_b.A[4]
A[4] => part:iPart_c.A[4]
A[4] => part:iPart_d.A[4]
A[5] => part:iPart_a.A[5]
A[5] => part:iPart_b.A[5]
A[5] => part:iPart_c.A[5]
A[5] => part:iPart_d.A[5]
A[6] => part:iPart_a.A[6]
A[6] => part:iPart_b.A[6]
A[6] => part:iPart_c.A[6]
A[6] => part:iPart_d.A[6]
A[7] => part:iPart_a.A[7]
A[7] => part:iPart_b.A[7]
A[7] => part:iPart_c.A[7]
A[7] => part:iPart_d.A[7]
B[0] => part:iPart_a.B[0]
B[0] => part:iPart_b.B[0]
B[0] => part:iPart_c.B[0]
B[0] => part:iPart_d.B[0]
B[1] => part:iPart_a.B[1]
B[1] => part:iPart_b.B[1]
B[1] => part:iPart_c.B[1]
B[1] => part:iPart_d.B[1]
B[2] => part:iPart_a.B[2]
B[2] => part:iPart_b.B[2]
B[2] => part:iPart_c.B[2]
B[2] => part:iPart_d.B[2]
B[3] => part:iPart_a.B[3]
B[3] => part:iPart_b.B[3]
B[3] => part:iPart_c.B[3]
B[3] => part:iPart_d.B[3]
B[4] => part:iPart_a.B[4]
B[4] => part:iPart_b.B[4]
B[4] => part:iPart_c.B[4]
B[4] => part:iPart_d.B[4]
B[5] => part:iPart_a.B[5]
B[5] => part:iPart_b.B[5]
B[5] => part:iPart_c.B[5]
B[5] => part:iPart_d.B[5]
B[6] => part:iPart_a.B[6]
B[6] => part:iPart_b.B[6]
B[6] => part:iPart_c.B[6]
B[6] => part:iPart_d.B[6]
B[7] => part:iPart_a.B[7]
B[7] => part:iPart_b.B[7]
B[7] => part:iPart_c.B[7]
B[7] => part:iPart_d.B[7]
sel[0] => part:iPart_a.sel[0]
sel[0] => part:iPart_b.sel[0]
sel[0] => part:iPart_c.sel[0]
sel[0] => part:iPart_d.sel[0]
sel[1] => part:iPart_a.sel[1]
sel[1] => part:iPart_b.sel[1]
sel[1] => part:iPart_c.sel[1]
sel[1] => part:iPart_d.sel[1]
sel[2] => mux2:ipart_output.sel[0]
sel[3] => mux2:ipart_output.sel[1]
cin => part:iPart_a.cin
cin => part:iPart_b.cin
cin => part:iPart_c.cin
cin => part:iPart_d.cin
output[0] <= mux2:ipart_output.output[0]
output[1] <= mux2:ipart_output.output[1]
output[2] <= mux2:ipart_output.output[2]
output[3] <= mux2:ipart_output.output[3]
output[4] <= mux2:ipart_output.output[4]
output[5] <= mux2:ipart_output.output[5]
output[6] <= mux2:ipart_output.output[6]
output[7] <= mux2:ipart_output.output[7]
cout <= mux2:ipart_output.output[8]


|part|part:iPart_a
A[0] => nbitfulladder:ifullAdder.A[0]
A[1] => nbitfulladder:ifullAdder.A[1]
A[2] => nbitfulladder:ifullAdder.A[2]
A[3] => nbitfulladder:ifullAdder.A[3]
A[4] => nbitfulladder:ifullAdder.A[4]
A[5] => nbitfulladder:ifullAdder.A[5]
A[6] => nbitfulladder:ifullAdder.A[6]
A[7] => nbitfulladder:ifullAdder.A[7]
B[0] => modified_B[0].DATAA
B[0] => output.DATAB
B[1] => modified_B[1].DATAA
B[1] => output.DATAB
B[2] => modified_B[2].DATAA
B[2] => output.DATAB
B[3] => modified_B[3].DATAA
B[3] => output.DATAB
B[4] => modified_B[4].DATAA
B[4] => output.DATAB
B[5] => modified_B[5].DATAA
B[5] => output.DATAB
B[6] => modified_B[6].DATAA
B[6] => output.DATAB
B[7] => modified_B[7].DATAA
B[7] => output.DATAB
sel[0] => sel_xnor.IN0
sel[0] => all_equal.IN0
sel[1] => sel_xnor.IN1
sel[1] => all_equal.IN0
sel[1] => nbitfulladder:ifullAdder.op
cin => all_equal.IN1
cin => all_equal.IN1
cin => all_positive.IN1
cin => nbitfulladder:ifullAdder.cin
output[0] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_a|nBitFullAdder:ifullAdder
A[0] => fulladder:gen_full_adders:0:ifulladder.A
A[1] => fulladder:gen_full_adders:1:ifulladder.A
A[2] => fulladder:gen_full_adders:2:ifulladder.A
A[3] => fulladder:gen_full_adders:3:ifulladder.A
A[4] => fulladder:gen_full_adders:4:ifulladder.A
A[5] => fulladder:gen_full_adders:5:ifulladder.A
A[6] => fulladder:gen_full_adders:6:ifulladder.A
A[7] => fulladder:gen_full_adders:7:ifulladder.A
B[0] => B_modified[0].DATAA
B[0] => B_modified[0].DATAB
B[1] => B_modified[1].DATAA
B[1] => B_modified[1].DATAB
B[2] => B_modified[2].DATAA
B[2] => B_modified[2].DATAB
B[3] => B_modified[3].DATAA
B[3] => B_modified[3].DATAB
B[4] => B_modified[4].DATAA
B[4] => B_modified[4].DATAB
B[5] => B_modified[5].DATAA
B[5] => B_modified[5].DATAB
B[6] => B_modified[6].DATAA
B[6] => B_modified[6].DATAB
B[7] => B_modified[7].DATAA
B[7] => B_modified[7].DATAB
cin => fulladder:gen_full_adders:0:ifulladder.cin
op => B_modified[7].OUTPUTSELECT
op => B_modified[6].OUTPUTSELECT
op => B_modified[5].OUTPUTSELECT
op => B_modified[4].OUTPUTSELECT
op => B_modified[3].OUTPUTSELECT
op => B_modified[2].OUTPUTSELECT
op => B_modified[1].OUTPUTSELECT
op => B_modified[0].OUTPUTSELECT
F[0] <= fulladder:gen_full_adders:0:ifulladder.F
F[1] <= fulladder:gen_full_adders:1:ifulladder.F
F[2] <= fulladder:gen_full_adders:2:ifulladder.F
F[3] <= fulladder:gen_full_adders:3:ifulladder.F
F[4] <= fulladder:gen_full_adders:4:ifulladder.F
F[5] <= fulladder:gen_full_adders:5:ifulladder.F
F[6] <= fulladder:gen_full_adders:6:ifulladder.F
F[7] <= fulladder:gen_full_adders:7:ifulladder.F
cout <= fulladder:gen_full_adders:7:ifulladder.cout


|part|part:iPart_a|nBitFullAdder:ifullAdder|FullAdder:\gen_full_adders:0:ifulladder
A => F.IN0
A => cout.IN0
B => F.IN1
B => cout.IN1
cin => F.IN1
cin => cout.IN1
F <= F.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_a|nBitFullAdder:ifullAdder|FullAdder:\gen_full_adders:1:ifulladder
A => F.IN0
A => cout.IN0
B => F.IN1
B => cout.IN1
cin => F.IN1
cin => cout.IN1
F <= F.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_a|nBitFullAdder:ifullAdder|FullAdder:\gen_full_adders:2:ifulladder
A => F.IN0
A => cout.IN0
B => F.IN1
B => cout.IN1
cin => F.IN1
cin => cout.IN1
F <= F.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_a|nBitFullAdder:ifullAdder|FullAdder:\gen_full_adders:3:ifulladder
A => F.IN0
A => cout.IN0
B => F.IN1
B => cout.IN1
cin => F.IN1
cin => cout.IN1
F <= F.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_a|nBitFullAdder:ifullAdder|FullAdder:\gen_full_adders:4:ifulladder
A => F.IN0
A => cout.IN0
B => F.IN1
B => cout.IN1
cin => F.IN1
cin => cout.IN1
F <= F.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_a|nBitFullAdder:ifullAdder|FullAdder:\gen_full_adders:5:ifulladder
A => F.IN0
A => cout.IN0
B => F.IN1
B => cout.IN1
cin => F.IN1
cin => cout.IN1
F <= F.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_a|nBitFullAdder:ifullAdder|FullAdder:\gen_full_adders:6:ifulladder
A => F.IN0
A => cout.IN0
B => F.IN1
B => cout.IN1
cin => F.IN1
cin => cout.IN1
F <= F.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_a|nBitFullAdder:ifullAdder|FullAdder:\gen_full_adders:7:ifulladder
A => F.IN0
A => cout.IN0
B => F.IN1
B => cout.IN1
cin => F.IN1
cin => cout.IN1
F <= F.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_b
A[0] => A_xor_B[0].IN0
A[0] => A_nand_B[0].IN0
A[0] => A_or_B[0].IN0
A[0] => mux2:iMux2.in4[0]
A[1] => A_xor_B[1].IN0
A[1] => A_nand_B[1].IN0
A[1] => A_or_B[1].IN0
A[1] => mux2:iMux2.in4[1]
A[2] => A_xor_B[2].IN0
A[2] => A_nand_B[2].IN0
A[2] => A_or_B[2].IN0
A[2] => mux2:iMux2.in4[2]
A[3] => A_xor_B[3].IN0
A[3] => A_nand_B[3].IN0
A[3] => A_or_B[3].IN0
A[3] => mux2:iMux2.in4[3]
A[4] => A_xor_B[4].IN0
A[4] => A_nand_B[4].IN0
A[4] => A_or_B[4].IN0
A[4] => mux2:iMux2.in4[4]
A[5] => A_xor_B[5].IN0
A[5] => A_nand_B[5].IN0
A[5] => A_or_B[5].IN0
A[5] => mux2:iMux2.in4[5]
A[6] => A_xor_B[6].IN0
A[6] => A_nand_B[6].IN0
A[6] => A_or_B[6].IN0
A[6] => mux2:iMux2.in4[6]
A[7] => A_xor_B[7].IN0
A[7] => A_nand_B[7].IN0
A[7] => A_or_B[7].IN0
A[7] => mux2:iMux2.in4[7]
B[0] => A_xor_B[0].IN1
B[0] => A_nand_B[0].IN1
B[0] => A_or_B[0].IN1
B[1] => A_xor_B[1].IN1
B[1] => A_nand_B[1].IN1
B[1] => A_or_B[1].IN1
B[2] => A_xor_B[2].IN1
B[2] => A_nand_B[2].IN1
B[2] => A_or_B[2].IN1
B[3] => A_xor_B[3].IN1
B[3] => A_nand_B[3].IN1
B[3] => A_or_B[3].IN1
B[4] => A_xor_B[4].IN1
B[4] => A_nand_B[4].IN1
B[4] => A_or_B[4].IN1
B[5] => A_xor_B[5].IN1
B[5] => A_nand_B[5].IN1
B[5] => A_or_B[5].IN1
B[6] => A_xor_B[6].IN1
B[6] => A_nand_B[6].IN1
B[6] => A_or_B[6].IN1
B[7] => A_xor_B[7].IN1
B[7] => A_nand_B[7].IN1
B[7] => A_or_B[7].IN1
sel[0] => mux2:iMux2.sel[0]
sel[1] => mux2:iMux2.sel[1]
cin => ~NO_FANOUT~
output[0] <= mux2:iMux2.output[0]
output[1] <= mux2:iMux2.output[1]
output[2] <= mux2:iMux2.output[2]
output[3] <= mux2:iMux2.output[3]
output[4] <= mux2:iMux2.output[4]
output[5] <= mux2:iMux2.output[5]
output[6] <= mux2:iMux2.output[6]
output[7] <= mux2:iMux2.output[7]
cout <= <GND>


|part|part:iPart_b|Mux2:iMux2
in1[0] => Mux7.IN0
in1[1] => Mux6.IN0
in1[2] => Mux5.IN0
in1[3] => Mux4.IN0
in1[4] => Mux3.IN0
in1[5] => Mux2.IN0
in1[6] => Mux1.IN0
in1[7] => Mux0.IN0
in2[0] => Mux7.IN1
in2[1] => Mux6.IN1
in2[2] => Mux5.IN1
in2[3] => Mux4.IN1
in2[4] => Mux3.IN1
in2[5] => Mux2.IN1
in2[6] => Mux1.IN1
in2[7] => Mux0.IN1
in3[0] => Mux7.IN2
in3[1] => Mux6.IN2
in3[2] => Mux5.IN2
in3[3] => Mux4.IN2
in3[4] => Mux3.IN2
in3[5] => Mux2.IN2
in3[6] => Mux1.IN2
in3[7] => Mux0.IN2
in4[0] => Mux7.IN3
in4[1] => Mux6.IN3
in4[2] => Mux5.IN3
in4[3] => Mux4.IN3
in4[4] => Mux3.IN3
in4[5] => Mux2.IN3
in4[6] => Mux1.IN3
in4[7] => Mux0.IN3
sel[0] => Mux0.IN5
sel[0] => Mux1.IN5
sel[0] => Mux2.IN5
sel[0] => Mux3.IN5
sel[0] => Mux4.IN5
sel[0] => Mux5.IN5
sel[0] => Mux6.IN5
sel[0] => Mux7.IN5
sel[1] => Mux0.IN4
sel[1] => Mux1.IN4
sel[1] => Mux2.IN4
sel[1] => Mux3.IN4
sel[1] => Mux4.IN4
sel[1] => Mux5.IN4
sel[1] => Mux6.IN4
sel[1] => Mux7.IN4
output[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_c
A[0] => mux2:iMux2.in1[1]
A[0] => mux2:iMux2.in2[1]
A[0] => mux2:iMux2.in3[1]
A[1] => mux2:iMux2.in1[2]
A[1] => mux2:iMux2.in2[2]
A[1] => mux2:iMux2.in3[2]
A[2] => mux2:iMux2.in1[3]
A[2] => mux2:iMux2.in2[3]
A[2] => mux2:iMux2.in3[3]
A[3] => mux2:iMux2.in1[4]
A[3] => mux2:iMux2.in2[4]
A[3] => mux2:iMux2.in3[4]
A[4] => mux2:iMux2.in1[5]
A[4] => mux2:iMux2.in2[5]
A[4] => mux2:iMux2.in3[5]
A[5] => mux2:iMux2.in1[6]
A[5] => mux2:iMux2.in2[6]
A[5] => mux2:iMux2.in3[6]
A[6] => mux2:iMux2.in1[7]
A[6] => mux2:iMux2.in2[7]
A[6] => mux2:iMux2.in3[7]
A[7] => cout.DATAA
A[7] => mux2:iMux2.in2[0]
B[0] => ~NO_FANOUT~
B[1] => ~NO_FANOUT~
B[2] => ~NO_FANOUT~
B[3] => ~NO_FANOUT~
B[4] => ~NO_FANOUT~
B[5] => ~NO_FANOUT~
B[6] => ~NO_FANOUT~
B[7] => ~NO_FANOUT~
sel[0] => mux2:iMux2.sel[0]
sel[0] => Equal0.IN1
sel[1] => mux2:iMux2.sel[1]
sel[1] => Equal0.IN0
cin => mux2:iMux2.in3[0]
output[0] <= mux2:iMux2.output[0]
output[1] <= mux2:iMux2.output[1]
output[2] <= mux2:iMux2.output[2]
output[3] <= mux2:iMux2.output[3]
output[4] <= mux2:iMux2.output[4]
output[5] <= mux2:iMux2.output[5]
output[6] <= mux2:iMux2.output[6]
output[7] <= mux2:iMux2.output[7]
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_c|Mux2:iMux2
in1[0] => Mux7.IN0
in1[1] => Mux6.IN0
in1[2] => Mux5.IN0
in1[3] => Mux4.IN0
in1[4] => Mux3.IN0
in1[5] => Mux2.IN0
in1[6] => Mux1.IN0
in1[7] => Mux0.IN0
in2[0] => Mux7.IN1
in2[1] => Mux6.IN1
in2[2] => Mux5.IN1
in2[3] => Mux4.IN1
in2[4] => Mux3.IN1
in2[5] => Mux2.IN1
in2[6] => Mux1.IN1
in2[7] => Mux0.IN1
in3[0] => Mux7.IN2
in3[1] => Mux6.IN2
in3[2] => Mux5.IN2
in3[3] => Mux4.IN2
in3[4] => Mux3.IN2
in3[5] => Mux2.IN2
in3[6] => Mux1.IN2
in3[7] => Mux0.IN2
in4[0] => Mux7.IN3
in4[1] => Mux6.IN3
in4[2] => Mux5.IN3
in4[3] => Mux4.IN3
in4[4] => Mux3.IN3
in4[5] => Mux2.IN3
in4[6] => Mux1.IN3
in4[7] => Mux0.IN3
sel[0] => Mux0.IN5
sel[0] => Mux1.IN5
sel[0] => Mux2.IN5
sel[0] => Mux3.IN5
sel[0] => Mux4.IN5
sel[0] => Mux5.IN5
sel[0] => Mux6.IN5
sel[0] => Mux7.IN5
sel[1] => Mux0.IN4
sel[1] => Mux1.IN4
sel[1] => Mux2.IN4
sel[1] => Mux3.IN4
sel[1] => Mux4.IN4
sel[1] => Mux5.IN4
sel[1] => Mux6.IN4
sel[1] => Mux7.IN4
output[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_d
A[0] => cout.DATAA
A[0] => mux2:iMux2.in2[7]
A[1] => mux2:iMux2.in1[0]
A[1] => mux2:iMux2.in2[0]
A[1] => mux2:iMux2.in3[0]
A[1] => mux2:iMux2.in4[0]
A[2] => mux2:iMux2.in1[1]
A[2] => mux2:iMux2.in2[1]
A[2] => mux2:iMux2.in3[1]
A[2] => mux2:iMux2.in4[1]
A[3] => mux2:iMux2.in1[2]
A[3] => mux2:iMux2.in2[2]
A[3] => mux2:iMux2.in3[2]
A[3] => mux2:iMux2.in4[2]
A[4] => mux2:iMux2.in1[3]
A[4] => mux2:iMux2.in2[3]
A[4] => mux2:iMux2.in3[3]
A[4] => mux2:iMux2.in4[3]
A[5] => mux2:iMux2.in1[4]
A[5] => mux2:iMux2.in2[4]
A[5] => mux2:iMux2.in3[4]
A[5] => mux2:iMux2.in4[4]
A[6] => mux2:iMux2.in1[5]
A[6] => mux2:iMux2.in2[5]
A[6] => mux2:iMux2.in3[5]
A[6] => mux2:iMux2.in4[5]
A[7] => mux2:iMux2.in1[6]
A[7] => mux2:iMux2.in2[6]
A[7] => mux2:iMux2.in3[6]
A[7] => mux2:iMux2.in4[7]
A[7] => mux2:iMux2.in4[6]
B[0] => ~NO_FANOUT~
B[1] => ~NO_FANOUT~
B[2] => ~NO_FANOUT~
B[3] => ~NO_FANOUT~
B[4] => ~NO_FANOUT~
B[5] => ~NO_FANOUT~
B[6] => ~NO_FANOUT~
B[7] => ~NO_FANOUT~
sel[0] => mux2:iMux2.sel[0]
sel[0] => Equal0.IN1
sel[1] => mux2:iMux2.sel[1]
sel[1] => Equal0.IN0
cin => mux2:iMux2.in3[7]
output[0] <= mux2:iMux2.output[0]
output[1] <= mux2:iMux2.output[1]
output[2] <= mux2:iMux2.output[2]
output[3] <= mux2:iMux2.output[3]
output[4] <= mux2:iMux2.output[4]
output[5] <= mux2:iMux2.output[5]
output[6] <= mux2:iMux2.output[6]
output[7] <= mux2:iMux2.output[7]
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|part|part:iPart_d|Mux2:iMux2
in1[0] => Mux7.IN0
in1[1] => Mux6.IN0
in1[2] => Mux5.IN0
in1[3] => Mux4.IN0
in1[4] => Mux3.IN0
in1[5] => Mux2.IN0
in1[6] => Mux1.IN0
in1[7] => Mux0.IN0
in2[0] => Mux7.IN1
in2[1] => Mux6.IN1
in2[2] => Mux5.IN1
in2[3] => Mux4.IN1
in2[4] => Mux3.IN1
in2[5] => Mux2.IN1
in2[6] => Mux1.IN1
in2[7] => Mux0.IN1
in3[0] => Mux7.IN2
in3[1] => Mux6.IN2
in3[2] => Mux5.IN2
in3[3] => Mux4.IN2
in3[4] => Mux3.IN2
in3[5] => Mux2.IN2
in3[6] => Mux1.IN2
in3[7] => Mux0.IN2
in4[0] => Mux7.IN3
in4[1] => Mux6.IN3
in4[2] => Mux5.IN3
in4[3] => Mux4.IN3
in4[4] => Mux3.IN3
in4[5] => Mux2.IN3
in4[6] => Mux1.IN3
in4[7] => Mux0.IN3
sel[0] => Mux0.IN5
sel[0] => Mux1.IN5
sel[0] => Mux2.IN5
sel[0] => Mux3.IN5
sel[0] => Mux4.IN5
sel[0] => Mux5.IN5
sel[0] => Mux6.IN5
sel[0] => Mux7.IN5
sel[1] => Mux0.IN4
sel[1] => Mux1.IN4
sel[1] => Mux2.IN4
sel[1] => Mux3.IN4
sel[1] => Mux4.IN4
sel[1] => Mux5.IN4
sel[1] => Mux6.IN4
sel[1] => Mux7.IN4
output[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|part|Mux2:ipart_output
in1[0] => Mux8.IN0
in1[1] => Mux7.IN0
in1[2] => Mux6.IN0
in1[3] => Mux5.IN0
in1[4] => Mux4.IN0
in1[5] => Mux3.IN0
in1[6] => Mux2.IN0
in1[7] => Mux1.IN0
in1[8] => Mux0.IN0
in2[0] => Mux8.IN1
in2[1] => Mux7.IN1
in2[2] => Mux6.IN1
in2[3] => Mux5.IN1
in2[4] => Mux4.IN1
in2[5] => Mux3.IN1
in2[6] => Mux2.IN1
in2[7] => Mux1.IN1
in2[8] => Mux0.IN1
in3[0] => Mux8.IN2
in3[1] => Mux7.IN2
in3[2] => Mux6.IN2
in3[3] => Mux5.IN2
in3[4] => Mux4.IN2
in3[5] => Mux3.IN2
in3[6] => Mux2.IN2
in3[7] => Mux1.IN2
in3[8] => Mux0.IN2
in4[0] => Mux8.IN3
in4[1] => Mux7.IN3
in4[2] => Mux6.IN3
in4[3] => Mux5.IN3
in4[4] => Mux4.IN3
in4[5] => Mux3.IN3
in4[6] => Mux2.IN3
in4[7] => Mux1.IN3
in4[8] => Mux0.IN3
sel[0] => Mux0.IN5
sel[0] => Mux1.IN5
sel[0] => Mux2.IN5
sel[0] => Mux3.IN5
sel[0] => Mux4.IN5
sel[0] => Mux5.IN5
sel[0] => Mux6.IN5
sel[0] => Mux7.IN5
sel[0] => Mux8.IN5
sel[1] => Mux0.IN4
sel[1] => Mux1.IN4
sel[1] => Mux2.IN4
sel[1] => Mux3.IN4
sel[1] => Mux4.IN4
sel[1] => Mux5.IN4
sel[1] => Mux6.IN4
sel[1] => Mux7.IN4
sel[1] => Mux8.IN4
output[0] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[8] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


